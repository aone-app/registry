// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: registry.proto

package registry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	TtlSeconds    int32                  `protobuf:"varint,3,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_registry_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *RegisterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterRequest) GetTtlSeconds() int32 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

type RegisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	mi := &file_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_registry_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeregisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeregisterRequest) Reset() {
	*x = DeregisterRequest{}
	mi := &file_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterRequest) ProtoMessage() {}

func (x *DeregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterRequest.ProtoReflect.Descriptor instead.
func (*DeregisterRequest) Descriptor() ([]byte, []int) {
	return file_registry_proto_rawDescGZIP(), []int{2}
}

func (x *DeregisterRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *DeregisterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DeregisterReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeregisterReply) Reset() {
	*x = DeregisterReply{}
	mi := &file_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeregisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterReply) ProtoMessage() {}

func (x *DeregisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterReply.ProtoReflect.Descriptor instead.
func (*DeregisterReply) Descriptor() ([]byte, []int) {
	return file_registry_proto_rawDescGZIP(), []int{3}
}

func (x *DeregisterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesRequest) Reset() {
	*x = GetNodesRequest{}
	mi := &file_registry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesRequest) ProtoMessage() {}

func (x *GetNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesRequest.ProtoReflect.Descriptor instead.
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return file_registry_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodesRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type GetNodesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []string               `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesReply) Reset() {
	*x = GetNodesReply{}
	mi := &file_registry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesReply) ProtoMessage() {}

func (x *GetNodesReply) ProtoReflect() protoreflect.Message {
	mi := &file_registry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesReply.ProtoReflect.Descriptor instead.
func (*GetNodesReply) Descriptor() ([]byte, []int) {
	return file_registry_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodesReply) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

var File_registry_proto protoreflect.FileDescriptor

const file_registry_proto_rawDesc = "" +
	"\n" +
	"\x0eregistry.proto\x12\bregistry\"f\n" +
	"\x0fRegisterRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1f\n" +
	"\vttl_seconds\x18\x03 \x01(\x05R\n" +
	"ttlSeconds\")\n" +
	"\rRegisterReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"G\n" +
	"\x11DeregisterRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"+\n" +
	"\x0fDeregisterReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"+\n" +
	"\x0fGetNodesRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"%\n" +
	"\rGetNodesReply\x12\x14\n" +
	"\x05nodes\x18\x01 \x03(\tR\x05nodes2\xd7\x01\n" +
	"\x0fRegistryService\x12>\n" +
	"\bRegister\x12\x19.registry.RegisterRequest\x1a\x17.registry.RegisterReply\x12D\n" +
	"\n" +
	"Deregister\x12\x1b.registry.DeregisterRequest\x1a\x19.registry.DeregisterReply\x12>\n" +
	"\bGetNodes\x12\x19.registry.GetNodesRequest\x1a\x17.registry.GetNodesReplyBy\n" +
	"\fcom.registryB\rRegistryProtoP\x01Z\x1anerosoft.com/aone/registry\xa2\x02\x03RXX\xaa\x02\bRegistry\xca\x02\bRegistry\xe2\x02\x14Registry\\GPBMetadata\xea\x02\bRegistryb\x06proto3"

var (
	file_registry_proto_rawDescOnce sync.Once
	file_registry_proto_rawDescData []byte
)

func file_registry_proto_rawDescGZIP() []byte {
	file_registry_proto_rawDescOnce.Do(func() {
		file_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_proto_rawDesc), len(file_registry_proto_rawDesc)))
	})
	return file_registry_proto_rawDescData
}

var file_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_registry_proto_goTypes = []any{
	(*RegisterRequest)(nil),   // 0: registry.RegisterRequest
	(*RegisterReply)(nil),     // 1: registry.RegisterReply
	(*DeregisterRequest)(nil), // 2: registry.DeregisterRequest
	(*DeregisterReply)(nil),   // 3: registry.DeregisterReply
	(*GetNodesRequest)(nil),   // 4: registry.GetNodesRequest
	(*GetNodesReply)(nil),     // 5: registry.GetNodesReply
}
var file_registry_proto_depIdxs = []int32{
	0, // 0: registry.RegistryService.Register:input_type -> registry.RegisterRequest
	2, // 1: registry.RegistryService.Deregister:input_type -> registry.DeregisterRequest
	4, // 2: registry.RegistryService.GetNodes:input_type -> registry.GetNodesRequest
	1, // 3: registry.RegistryService.Register:output_type -> registry.RegisterReply
	3, // 4: registry.RegistryService.Deregister:output_type -> registry.DeregisterReply
	5, // 5: registry.RegistryService.GetNodes:output_type -> registry.GetNodesReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_registry_proto_init() }
func file_registry_proto_init() {
	if File_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_proto_rawDesc), len(file_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_proto_goTypes,
		DependencyIndexes: file_registry_proto_depIdxs,
		MessageInfos:      file_registry_proto_msgTypes,
	}.Build()
	File_registry_proto = out.File
	file_registry_proto_goTypes = nil
	file_registry_proto_depIdxs = nil
}
